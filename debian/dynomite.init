#! /bin/sh

### BEGIN INIT INFO
# Provides:          dynomite
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: init script for Dynomite
# Description:       Dynomite is a thin, distributed dynamo layer
#                    for different storages and protocols.
### END INIT INFO

# Author: Jean Baptiste Favre <debian@jbfavre.org>
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Dynomite"
NAME=dynomite
SCRIPTNAME=/etc/init.d/$NAME
DAEMON=`which ${NAME}`

# Set some safe defaults. So not change values here, override them in
# in /etc/default/trafficserver instead.
# See there for a documentation as well 

RUNDIR=/var/run/${NAME}
PIDFILE=${RUNDIR}/${NAME}
LOGDIR=/var/log/${NAME}
LOGFILE=${LOGDIR}/${NAME}.log
CONF_FILE=/etc/${NAME}/${NAME}.yml

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

DAEMON_OPTS="-d -c ${CONF_FILE} -p ${PIDFILE} -o ${LOGFILE}"

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
. /lib/lsb/init-functions

[ -f ${CONF_FILE} ] || (echo "Please fill config file in ${CONF_FILE} and restart." && exit  0)

test -x ${DAEMON} || exit 0

set -e

test_config() {
    if ${DAEMON} -t -c ${CONF_FILE} >/dev/null 2>&1; then
        return 0
    else
        ${DAEMON} -t -c ${CONF_FILE}
        return $?
    fi
}
status() {
	status_of_proc -p ${PIDFILE} "${DAEMON}" ${NAME}
}
start() {
    # Check if the MAX_FDS limit is set in /etc/default/nutcracker
    if [ -n "${MAX_FDS}" ]; then
        # Set the MAX_FDS limit
        ulimit -n ${MAX_FDS}
    fi
    mkdir -p ${LOGDIR}
    touch ${LOGFILE}
    chown -R nobody:nogroup ${LOGDIR}
    chmod 755 ${LOGDIR}
    mkdir -p ${RUNDIR}
    touch ${PIDFILE}
    chown -R nobody:nogroup ${RUNDIR}
    chmod 755 ${RUNDIR}
    start-stop-daemon --start --quiet --umask 007 --pidfile ${PIDFILE} \
        --chuid nobody:nogroup --exec ${DAEMON} -- ${DAEMON_OPTS} || true
}
stop() {
    start-stop-daemon --stop --quiet --pidfile ${PIDFILE} \
        --exec ${DAEMON} || true
    rm -f ${RUNDIR}/*
}

case "$1" in
    start)
	log_begin_msg "Starting $DESC"
        test_config
        start
	log_end_msg $?
	;;

    stop)
	log_begin_msg "Stopping $DESC"
        stop
	log_end_msg $?
	;;

    restart|force-reload)
        log_begin_msg "Restarting $DESC"
	test_config
        stop
        sleep 1
	start
        log_end_msg $?
	;;

    configtest|testconfig)
	log_begin_msg "Testing $DESC conf "
	test_config
	log_end_msg $?
        ;;

    status)
	status
        ;;

    *)
	echo "Usage: /etc/init.d/${NAME} {start|stop|status|restart|force-reload|configtest|testconfig}" >&2
	exit 1
	;;

esac

:
